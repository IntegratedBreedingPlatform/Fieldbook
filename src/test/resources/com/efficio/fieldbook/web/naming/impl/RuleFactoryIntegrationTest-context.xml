<?xml version="1.0" encoding="ISO-8859-1"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
           ">

	<!-- Declare property file locations  -->
	<context:property-placeholder location="classpath:fieldbook.properties, classpath:test.properties" />

    
   	<bean class="org.generationcp.commons.ruleengine.RulesPostProcessor">
        <property name="ruleFactory" ref="ruleFactory"/>
    </bean>

    <bean id="ruleFactory" class="org.generationcp.commons.ruleengine.RuleFactory"
          init-method="init"/>

    <bean id="ruleConfigProvider"
          class="org.generationcp.commons.ruleengine.provider.PropertyFileRuleConfigurationProvider">
        <property name="ruleSequenceConfiguration">
            <map>
                <entry key="naming" value="${naming.rules}"/>
            </map>
        </property>
    </bean>
	<bean id="ruleService" class="org.generationcp.commons.ruleengine.impl.RulesServiceImpl" />
    <!--
            This component scan automatically registers all implementations of the Rule interface into the Spring context.
            In conjunction with the RulesPostProcessor above, this automatically populates the map in the RuleFactory
             -->
    <context:component-scan base-package="com.efficio.fieldbook.web.naming.rules.naming"/>

</beans>
