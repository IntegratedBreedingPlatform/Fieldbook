<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.generationcp</groupId>
	<artifactId>Fieldbook</artifactId>
	<packaging>war</packaging>
	<name>Fieldbook Project</name>
	<version>3.1.2.SNAPSHOT</version>

	<properties>
        <ibpcommons.version>3.1.2.SNAPSHOT</ibpcommons.version>
		<spring.version>3.2.11.RELEASE</spring.version>
		<spring.security.version>3.2.5.RELEASE</spring.security.version>
    </properties>

	<distributionManagement>
		<repository>
			<id>efficio-nexus</id>
			<name>Releases</name>
			<url>http://apps.leafnode.io:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>efficio-nexus</id>
			<name>Snapshots</name>
			<url>http://apps.leafnode.io:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<!-- Spring Dependency -->	       
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument-tomcat</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-aspects</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- Other Apache Libs -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.8</version>
		</dependency>
		
		<!-- Logging dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.7</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.2</version>
        </dependency>
		
		<!-- JUnit Dependency for Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>

		<!-- for testing, uncomment to use junit tests in src/test/java -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- IBPCommons Dependency -->
		<dependency>
			<groupId>org.generationcp</groupId>
			<artifactId>ibpcommons</artifactId>
			<version>${ibpcommons.version}</version>
			<exclusions>
				<exclusion>
		            <groupId>junit</groupId>
		            <artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin</artifactId>
				</exclusion>
			</exclusions>
		</dependency>		
		
		<!--ThymeLeaf Dependencies -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring3</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>		
		<dependency>
		    <groupId>com.github.mxab.thymeleaf.extras</groupId>
		    <artifactId>thymeleaf-extras-data-attribute</artifactId>
		    <version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity3</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- For automatic conversion of Java objects to JSON for AJAX purposes -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

        <!-- For support of LEGACYHTML5 templating mode ( AngularJS and Thymeleaf integration -->
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>1.9.20</version>
        </dependency>

        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
        </dependency>

		<!-- ZXing dependency -->
		<dependency>
	      <groupId>com.google.zxing</groupId>
	      <artifactId>core</artifactId>
	      <version>2.2</version>
	    </dependency>
	    <dependency>
	      <groupId>com.google.zxing</groupId>
	      <artifactId>javase</artifactId>
	      <version>2.2</version>
	    </dependency>
	    <!-- for itet pdf generation -->
	    <dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.0.7</version>
		</dependency>
		<!-- for image scaling -->
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
		<!-- added for gzip compression -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-web</artifactId>
			<version>2.0.4</version>
		</dependency>
		<!-- for CSV Writing -->
		<dependency>
			<groupId>net.sourceforge.javacsv</groupId>
			<artifactId>javacsv</artifactId>
			<version>2.0</version>
		</dependency>		
		<!-- Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>           		  
	</dependencies>

	<profiles>
		<profile>
			<id>developer</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>!ci.active</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
							    <id>copy-properties</id>
								<phase>generate-resources</phase>
								<configuration>
									<tasks>
										<!-- Please do not change this, run mvn clean install -DenvConfig={your pilpeline folder name}
										and make a folder under pipeline/config with property overrides as per your environment. -->
										<copy todir="src/main/resources" overwrite="true">
											<fileset dir="pipeline/config/${envConfig}"
													 id="fromDir">
												<include name="fieldbook.properties" />
												<include name="workbench.properties"/>
											</fileset>
										</copy>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>default-cli</id>
								<configuration>
									<tasks>
										<delete dir="${webapp.path}/${project.artifactId}"/>
										<copy todir="${webapp.path}/${project.artifactId}">
											<fileset dir="target/${project.artifactId}"
													 includes="**/*"/>
										</copy>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>test-properties-override</id>
								<phase>generate-test-resources</phase>
								<goals>
				                	<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo message="Overriding test environment properties from pipeline/config/${envConfig}" />
										<copy todir="src/test/resources" overwrite="true">
											<fileset dir="pipeline/config/${envConfig}" id="fromDir">
                                                <include name="test.properties"/>
											</fileset>
										</copy>
									</tasks>
								</configuration>			
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>continuous-integration</id>
			<activation>
				<property>
					<name>ci.active</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>clean</phase>
								<configuration>
									<tasks>
										<copy todir="src/main/resources" overwrite="true">
											<fileset dir="pipeline/config/${envConfig}" id="fromDir">
												<include name="fieldbook.properties"/>
                                                <include name="workbench.properties"/>
											</fileset>
										</copy>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>test-properties-override</id>
								<phase>generate-test-resources</phase>
								<goals>
				                	<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo message="Overriding test environment properties from pipeline/config/${envConfig}" />
										<copy todir="src/test/resources" overwrite="true">
											<fileset dir="pipeline/config/${envConfig}" id="fromDir">
                                                <include name="test.properties"/>
											</fileset>
										</copy>
									</tasks>
								</configuration>			
							</execution>							
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
		<plugins>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
			</plugin>
			<!-- Plugin for working with Tomcat via maven -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat6-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<path>/${project.build.finalName}</path>
					<port>${tomcatPort}</port>
					<hostName>${tomcatHost}</hostName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<port>${tomcatPort}</port>
					<url>http://${tomcatHost}:${tomcatPort}/manager/text</url>
					<server>TomcatServer</server>
					<path>/${project.build.finalName}</path>
					<maxPostSize>-1</maxPostSize>
				</configuration>
			</plugin>									
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.1.201405082137</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
